{"version":3,"sources":["main.js"],"names":["initialize_map","map_id","latitude","longitude","map_canvas","document","getElementById","officeLocation","google","maps","LatLng","map_options","center","zoom","mapTypeId","MapTypeId","ROADMAP","map","Map","Marker","position","title","registerCallBack","$","removeClass","hide","$name","val","$email","$phone","registerUser","name","email","phone","ajax","url","data","entry.799761301","entry.1111908573","entry.681310805","type","dataType","crossDomain","statusCode",0,200,"validateName","re","test","validateEmail","validateMobile","mobile","checkValidation","element","value","success","getAttribute","addClass","isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","update","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","ready","devDayRegister","animate","scrollTop","offset","top","particleground","dotColor","lineColor","lineWidth","particleRadius","proximity","density","ScrollMagic","Controller","globalSceneOptions","duration","Scene","triggerElement","setClassToggle","addTo","on","click"],"mappings":"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","file":"main.min.js","sourcesContent":["/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // Check to see if there's an updated version of service-worker.js with\n      // new files to cache:\n      // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-registration-update-method\n      if (typeof registration.update === 'function') {\n        registration.update();\n      }\n\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  $(document).ready(function(){\n    window.devDayRegister = function() {\n        $('html, body').animate({\n            scrollTop: $(\"#register-container\").offset().top\n        }, 1000);\n      };\n  });\n\n  // Particles\n  $('.devday-bg').particleground({\n    dotColor: 'rgba(63, 81, 181, 0.45)',\n    lineColor: '#9499B5',\n    lineWidth: 0.25,\n    particleRadius: 4,\n    proximity: 100,\n    density: 20000\n  });\n\n  // Scroll - Social Media icons\n  var controller = new ScrollMagic.Controller({globalSceneOptions: {duration: 50000}});\n\n  new ScrollMagic.Scene({triggerElement: \".section--presenter\"})\n        .setClassToggle(\".section__presenter-container-icons\", \"active\")\n        .addTo(controller);\n\n  // Sahaj Map\n  function initialize_map(map_id, latitude, longitude) {\n      var map_canvas = document.getElementById(map_id);\n      var officeLocation = new google.maps.LatLng(latitude, longitude);\n      var map_options = {\n          center: officeLocation,\n          zoom: 16,\n          mapTypeId: google.maps.MapTypeId.ROADMAP\n      };\n      var map = new google.maps.Map(map_canvas, map_options);\n      var marker = new google.maps.Marker({\n          position: officeLocation,\n          map: map,\n          title: \"Sahaj Software Solutions Pvt. Ltd.\"\n      });\n      return map;\n  }\n\n  var sahajBangaloreMap = initialize_map('sahaj-bangalore-map', 12.924995, 77.627850);\n\n\n  var $name = $(\"#devday-register-form input[name='name']\"),\n      $email = $(\"#devday-register-form input[name='email']\"),\n      $phone = $(\"#devday-register-form input[name='phone']\");\n\n\n  function registerCallBack() {\n    $(\"#registration-success\").removeClass(\"hidden\");\n    $(\"#registration\").hide();\n    $name.val('');\n    $email.val('');\n    $phone.val('');\n  }\n\n  function registerUser(name, email, phone) {\n      $.ajax({\n          url: \"https://docs.google.com/forms/d/1_qsC8Er-qKfjWjgJ0BjrawalFCfoOO6Q4qOh2H5UDeI/formResponse\",\n          data: {\n            \"entry.799761301\" : name,\n            \"entry.1111908573\" : email,\n            \"entry.681310805\": phone},\n          type: \"POST\",\n          dataType: \"xml\",\n          crossDomain: true,\n          statusCode: {\n              0: function (){\n                registerCallBack();\n              },\n              200: function (){\n                registerCallBack();\n              }\n          }\n      });\n  }\n\n  function validateName(name) {\n    var re = /(\\w+)\\s*(\\w+)/;\n    return re.test(name);\n  }\n\n  function validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  function validateMobile(mobile) {\n    var re = /^(\\+91-|\\+91|0)?\\d{10}$/;\n    return re.test(mobile);\n  }\n\n  var success = {\n    name: false,\n    email: false,\n    phone: false\n  };\n\n  function checkValidation(element, value) {\n    if(value) {\n      success[element[0].getAttribute(\"name\")] = true;\n      element.removeClass(\"error\");\n    } else {\n      success[element[0].getAttribute(\"name\")] = false;\n      element.addClass(\"error\");\n    }\n  }\n\n  $($name).on(\"keyup keypress\", function() {\n    checkValidation($name, validateName($name.val()));\n  });\n\n  $($email).on(\"keyup keypress\", function() {\n    checkValidation($email, validateEmail($email.val()));\n  });\n\n  $($phone).on(\"keyup keypress\", function() {\n    checkValidation($phone, validateMobile($phone.val()));\n  });\n\n\n  $(\"#sign-up-button\").click(function(){\n    var name = $name.val(),\n        email = $email.val(),\n        phone = $phone.val();\n\n    checkValidation($name, validateName(name));\n    checkValidation($email, validateEmail(email));\n    checkValidation($phone, validateMobile(phone));\n\n    if(success.name && success.email && success.phone) {\n      registerUser(name, email, phone);\n    }\n  });\n\n})();\n"],"sourceRoot":"/source/"}